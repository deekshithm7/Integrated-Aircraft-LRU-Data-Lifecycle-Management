version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: lru_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lru_network

  redis:
    image: redis:7-alpine
    container_name: lru_redis
    ports:
      - "6379:6379"
    networks:
      - lru_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lru_backend
    env_file:
      - .env
    volumes:
      # Mounts the backend code into the container for hot-reloading
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - lru_network
    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lru_frontend
    env_file:
      - .env
    volumes:
      # Mounts the frontend code for hot-reloading
      - ./frontend:/app
      # Prevents the local node_modules from overwriting the container's
      - /app/node_modules
    ports:
      # Maps the container's port 3000 to the host's port 3000
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - lru_network

volumes:
  postgres_data:

networks:
  lru_network:
    driver: bridge
